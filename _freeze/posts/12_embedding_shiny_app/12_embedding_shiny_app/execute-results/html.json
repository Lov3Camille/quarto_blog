{
  "hash": "4f08ca6a61d13e52071dffeede9fc028",
  "result": {
    "markdown": "---\ntitle: \"How to embed a Shiny app into your blog posts\"\ndate: '2022-05-09'\ncategories: [\"Shiny\", \"Shorts\"]\ndescription: \"This is a one-minute blog post to share how to incorporate Shiny apps in blog posts.\"\nexecute: \n  message: false\n  warning: false\n  collapse: false\neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n\n:::\n\n\nToday's a short blog post.\nIt's mainly for sharing a cool trick I just learned.\n\nHere's a simple template to incorporate your Shiny app into an HTML file.\nFor instance, you can incorporate your shiny app into your blog post like I do here.\nSimply exchange the src argument by your Shiny app's URL and then you're good to go.\nHere, I use the app that I have [shown you a couple of months ago](../08_drawing_ggplot_interactively/08_drawing_ggplot_interactively.html).\n\n```\n<iframe src=\"https://rappa.shinyapps.io/interactive-ggplot\" data-external=\"1\" width=\"925px\" height=\"800px\">\n</iframe>\n```\n\nFrom what I could tell, this is same code that `knitr::include_app()` drops.\nBut including the `iframe` manually let's you adjust the width **and** height of your\nframe.\nBeware that you will have to choose the dimensions large enough for your Shiny app.\n\nUPDATE: Originally, I had demonstrated the above code chunk here. \nBut that causes unnecessary traffic on my shinyapps.io account, so I removed the demo.\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}