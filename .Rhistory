select(-lower)
medians_by_binned_size_and_zones
price_by_binned_size_and_zones
# Chunk 1
data(ames, package = 'modeldata')
library(tidyverse)
price_by_size_and_zones <- ames |>
janitor::clean_names() |>
select(sale_price, lot_area, ms_zoning) |>
filter(!str_detect(ms_zoning, "(A_agr|I_all|C_all)")) |>
mutate(ms_zoning = fct_drop(ms_zoning)) # Filter out small zones
# Chunk 2
price_by_binned_size_and_zones <- price_by_size_and_zones |>
mutate(
lot_area = cut(
lot_area,
breaks = quantile(lot_area, probs = c(0, 0.1, 0.4, 0.5, 0.6, 0.8, 1)),
include.lowest = T
)
) |>
mutate(
ms_zoning = str_replace_all(ms_zoning, "_", "\n")
)
price_by_binned_size_and_zones
# Chunk 3
medians_by_binned_size_and_zones <- price_by_binned_size_and_zones |>
group_by(ms_zoning, lot_area) |>
summarise(
n = n(),
sale_price = median(sale_price),
.groups = 'drop'
) |>
complete(lot_area, ms_zoning)
# Chunk 4
#| code-fold: true
name_function <- function(text) {
text %>%
str_remove_all('[ () \\[ \\] ]') %>%
str_split(',') %>%
map(as.numeric) %>%
map(scales::number, big.mark = ",") %>%
map_chr(paste, collapse = ' - ')
}
# Better labels
medians_by_binned_size_and_zones <- medians_by_binned_size_and_zones |>
mutate(lot_area = map_chr(lot_area, name_function))
# Convert labels to ordered factor
medians_by_binned_size_and_zones <- medians_by_binned_size_and_zones |>
mutate(
lower = str_match(lot_area, "\\d+,\\d+")[,1],
lower = as.numeric(str_remove(lower, ',')),
lot_area = fct_reorder(lot_area, lower)
) |>
select(-lower)
# Chunk 5
medians_by_binned_size_and_zones  |>
ggplot(aes(x = ms_zoning, y = lot_area, fill = sale_price)) +
geom_tile(col = 'black') +
theme_minimal() +
theme(
legend.position = 'top'
) +
guides(
fill = guide_colorbar(
barheight = unit(0.5, 'cm'),
barwidth = unit(10, 'cm'),
title.position = 'top'
)
) +
coord_cartesian(expand = F) +
scale_fill_viridis_c(
trans = "log",
labels = scales::label_dollar(),
na.value = 'grey80'
) +
labs(x = element_blank(), y = 'Lot area (in sq.ft)', fill = 'Median sale price')
medians_by_binned_size_and_zones
medians_by_binned_size_and_zones |>
ggplot(aes(x = ms_zoning, y = lot_area, fill = sale_price, size = n)) +
geom_point(shape = 21, col = 'black') +
theme_minimal() +
theme(
legend.position = 'top'
) +
guides(
fill = guide_colorbar(
barheight = unit(0.5, 'cm'),
barwidth = unit(10, 'cm'),
title.position = 'top'
)
) +
coord_cartesian(expand = F) +
scale_fill_viridis_c(
trans = "log",
labels = scales::label_dollar(),
na.value = 'grey80'
) +
labs(x = element_blank(), y = 'Lot area (in sq.ft)', fill = 'Median sale price')
medians_by_binned_size_and_zones |>
ggplot(aes(x = ms_zoning, y = lot_area, fill = sale_price, size = n)) +
geom_point(shape = 21, col = 'black') +
theme_minimal() +
theme(
legend.position = 'top'
) +
guides(
fill = guide_colorbar(
barheight = unit(0.5, 'cm'),
barwidth = unit(10, 'cm'),
title.position = 'top'
)
) +
scale_fill_viridis_c(
trans = "log",
labels = scales::label_dollar(),
na.value = 'grey80'
) +
labs(x = element_blank(), y = 'Lot area (in sq.ft)', fill = 'Median sale price')
medians_by_binned_size_and_zones |>
ggplot(aes(x = ms_zoning, y = lot_area, fill = sale_price, size = n)) +
geom_point(shape = 21, col = 'black') +
theme_minimal() +
theme(
legend.position = 'top'
) +
guides(
size = guide_none(),
fill = guide_colorbar(
barheight = unit(0.5, 'cm'),
barwidth = unit(10, 'cm'),
title.position = 'top'
)
) +
scale_fill_viridis_c(
trans = "log",
labels = scales::label_dollar(),
na.value = 'grey80'
) +
labs(x = element_blank(), y = 'Lot area (in sq.ft)', fill = 'Median sale price')
medians_by_binned_size_and_zones |>
ggplot(aes(x = ms_zoning, y = lot_area, fill = sale_price, size = n)) +
geom_point(shape = 21, col = 'black') +
theme_minimal() +
theme(
legend.position = 'top'
) +
guides(
size = guide_none(),
fill = guide_colorbar(
barheight = unit(0.5, 'cm'),
barwidth = unit(10, 'cm'),
title.position = 'top'
)
) +
scale_size_area() +
scale_fill_viridis_c(
trans = "log",
labels = scales::label_dollar(),
na.value = 'grey80'
) +
labs(x = element_blank(), y = 'Lot area (in sq.ft)', fill = 'Median sale price')
medians_by_binned_size_and_zones |>
ggplot(aes(x = ms_zoning, y = lot_area, fill = sale_price, size = n)) +
geom_point(shape = 21, col = 'black') +
theme_minimal() +
theme(
legend.position = 'top'
) +
guides(
size = guide_none(),
fill = guide_colorbar(
barheight = unit(0.5, 'cm'),
barwidth = unit(10, 'cm'),
title.position = 'top'
)
) +
scale_size_area(trans = 'log') +
scale_fill_viridis_c(
trans = "log",
labels = scales::label_dollar(),
na.value = 'grey80'
) +
labs(x = element_blank(), y = 'Lot area (in sq.ft)', fill = 'Median sale price')
medians_by_binned_size_and_zones |>
ggplot(aes(x = ms_zoning, y = lot_area)) +
geom_point(
aes(col = sale_price, fill = sale_price, size = n), shape = 21, col = 'black'
) +
geom_label(aes(label = n), nudge_x = 0.1, nudge_y = 0.1) +
theme_minimal() +
theme(
legend.position = 'top'
) +
guides(
size = guide_none(),
fill = guide_colorbar(
barheight = unit(0.5, 'cm'),
barwidth = unit(10, 'cm'),
title.position = 'top'
)
) +
scale_size_area(trans = 'log') +
scale_color_viridis_c(
trans = "log",
labels = scales::label_dollar(),
na.value = 'grey80'
) +
scale_fill_viridis_c(
trans = "log",
labels = scales::label_dollar(),
na.value = 'grey80'
) +
labs(x = element_blank(), y = 'Lot area (in sq.ft)', fill = 'Median sale price')
medians_by_binned_size_and_zones
# Chunk 1
data(ames, package = 'modeldata')
library(tidyverse)
price_by_size_and_zones <- ames |>
janitor::clean_names() |>
select(sale_price, lot_area, ms_zoning) |>
filter(!str_detect(ms_zoning, "(A_agr|I_all|C_all)")) |>
mutate(ms_zoning = fct_drop(ms_zoning)) # Filter out small zones
# Chunk 2
price_by_binned_size_and_zones <- price_by_size_and_zones |>
mutate(
lot_area = cut(
lot_area,
breaks = quantile(lot_area, probs = c(0, 0.1, 0.4, 0.5, 0.6, 0.8, 1)),
include.lowest = T
)
) |>
mutate(
ms_zoning = str_replace_all(ms_zoning, "_", "\n")
)
price_by_binned_size_and_zones
# Chunk 3
medians_by_binned_size_and_zones <- price_by_binned_size_and_zones |>
group_by(ms_zoning, lot_area) |>
summarise(
n = n(),
sale_price = median(sale_price),
.groups = 'drop'
) |>
complete(lot_area, ms_zoning)
# Chunk 4
#| code-fold: true
name_function <- function(text) {
text %>%
str_remove_all('[ () \\[ \\] ]') %>%
str_split(',') %>%
map(as.numeric) %>%
map(scales::number, big.mark = ",") %>%
map_chr(paste, collapse = ' - ')
}
# Better labels
medians_by_binned_size_and_zones <- medians_by_binned_size_and_zones |>
mutate(lot_area = map_chr(lot_area, name_function))
# Convert labels to ordered factor
medians_by_binned_size_and_zones <- medians_by_binned_size_and_zones |>
mutate(
lower = str_match(lot_area, "\\d+,\\d+")[,1],
lower = as.numeric(str_remove(lower, ',')),
lot_area = fct_reorder(lot_area, lower)
) |>
select(-lower)
# Chunk 5
medians_by_binned_size_and_zones  |>
ggplot(aes(x = ms_zoning, y = lot_area, fill = sale_price)) +
geom_tile(col = 'black') +
theme_minimal() +
theme(
legend.position = 'top'
) +
guides(
fill = guide_colorbar(
barheight = unit(0.5, 'cm'),
barwidth = unit(10, 'cm'),
title.position = 'top'
)
) +
coord_cartesian(expand = F) +
scale_fill_viridis_c(
trans = "log",
labels = scales::label_dollar(),
na.value = 'grey80'
) +
labs(x = element_blank(), y = 'Lot area (in sq.ft)', fill = 'Median sale price')
# Chunk 6
medians_by_binned_size_and_zones
# Chunk 7
bubble_grid_plot <- medians_by_binned_size_and_zones |>
ggplot(aes(x = ms_zoning, y = lot_area)) +
geom_point(
aes(col = sale_price, fill = sale_price, size = n), shape = 21
) +
theme_minimal() +
theme(
legend.position = 'top'
) +
guides(
col = guide_none(),
size = guide_none(),
fill = guide_colorbar(
barheight = unit(0.5, 'cm'),
barwidth = unit(10, 'cm'),
title.position = 'top'
)
) +
scale_size_area(max_size = 15) +
scale_color_viridis_c(
trans = "log",
labels = scales::label_dollar(),
na.value = 'grey80'
) +
scale_fill_viridis_c(
trans = "log",
labels = scales::label_dollar(),
na.value = 'grey80'
) +
labs(x = element_blank(), y = 'Lot area (in sq.ft)', fill = 'Median sale price')
bubble_grid_plot
bubble_grid_plot +
geom_text(
aes(label = n),
nudge_x = case_when(
medians_by_binned_size_and_zones$n > 225 ~ 0.2,
medians_by_binned_size_and_zones$n > 100 ~ 0.135,
medians_by_binned_size_and_zones$n > 40 ~ 0.08,
T ~ 0.05
),
nudge_y = 0.05, hjust = 0, vjust = 0, size = 2.5
) +
geom_text(
aes(label = scales::dollar(sale_price, scale_cut = c("k" = 1000))),
nudge_x = case_when(
medians_by_binned_size_and_zones$n > 225 ~ 0.2,
medians_by_binned_size_and_zones$n > 100 ~ 0.135,
medians_by_binned_size_and_zones$n > 40 ~ 0.08,
T ~ 0.05
),
nudge_y = 0.05, hjust = 0, vjust = 0, size = 2.5
)
bubble_grid_plot +
geom_text(
aes(label = n),
nudge_x = case_when(
medians_by_binned_size_and_zones$n > 225 ~ 0.2,
medians_by_binned_size_and_zones$n > 100 ~ 0.135,
medians_by_binned_size_and_zones$n > 40 ~ 0.08,
T ~ 0.05
),
nudge_y = 0.05, hjust = 0, vjust = 0, size = 2.5
) +
geom_text(
aes(label = scales::dollar(sale_price, scale_cut = c(0, "k" = 1000))),
nudge_x = case_when(
medians_by_binned_size_and_zones$n > 225 ~ 0.2,
medians_by_binned_size_and_zones$n > 100 ~ 0.135,
medians_by_binned_size_and_zones$n > 40 ~ 0.08,
T ~ 0.05
),
nudge_y = 0.05, hjust = 0, vjust = 0, size = 2.5
)
bubble_grid_plot +
geom_text(
aes(label = n),
nudge_x = case_when(
medians_by_binned_size_and_zones$n > 225 ~ 0.2,
medians_by_binned_size_and_zones$n > 100 ~ 0.135,
medians_by_binned_size_and_zones$n > 40 ~ 0.08,
T ~ 0.05
),
nudge_y = 0.05, hjust = 0, vjust = 0, size = 2.5
) +
geom_text(
aes(label = scales::dollar(sale_price, scale_cut = c(0, "k" = 1000))),
nudge_x = -case_when(
medians_by_binned_size_and_zones$n > 225 ~ 0.2,
medians_by_binned_size_and_zones$n > 100 ~ 0.135,
medians_by_binned_size_and_zones$n > 40 ~ 0.08,
T ~ 0.05
),
nudge_y = 0.05, hjust = 0, vjust = 0, size = 2.5
)
bubble_grid_plot +
geom_text(
aes(label = n),
nudge_x = case_when(
medians_by_binned_size_and_zones$n > 225 ~ 0.2,
medians_by_binned_size_and_zones$n > 100 ~ 0.135,
medians_by_binned_size_and_zones$n > 40 ~ 0.08,
T ~ 0.05
),
nudge_y = 0.05, hjust = 0, vjust = 0, size = 2.5
) +
geom_text(
aes(label = scales::dollar(sale_price, scale_cut = c(0, "k" = 1000))),
nudge_x = -case_when(
medians_by_binned_size_and_zones$n > 225 ~ 0.2,
medians_by_binned_size_and_zones$n > 100 ~ 0.135,
medians_by_binned_size_and_zones$n > 40 ~ 0.08,
T ~ 0.05
),
nudge_y = 0.05, hjust = 1, vjust = 0, size = 2.5
)
bubble_grid_plot +
geom_text(
aes(label = n),
nudge_x = case_when(
medians_by_binned_size_and_zones$n > 225 ~ 0.2,
medians_by_binned_size_and_zones$n > 100 ~ 0.135,
medians_by_binned_size_and_zones$n > 40 ~ 0.08,
T ~ 0.05
),
nudge_y = 0.05, hjust = 0, vjust = 0, size = 2.5
) +
geom_text(
aes(label = scales::dollar(sale_price, scale_cut = c(0, "k" = 1000), largest_with_cents = NULL)),
nudge_x = -case_when(
medians_by_binned_size_and_zones$n > 225 ~ 0.2,
medians_by_binned_size_and_zones$n > 100 ~ 0.135,
medians_by_binned_size_and_zones$n > 40 ~ 0.08,
T ~ 0.05
),
nudge_y = 0.05, hjust = 1, vjust = 0, size = 2.5
)
getwd()
renv::snapshot()
renv::snapshot()
getwd()
250 / 2.5
250 / 2.5 * 52
library(tidyverse)
palmerpenguins::penguins |>
filter(is.na(weight))
palmerpenguins::penguins |>
filter(is.na(body_mass_g))
palmerpenguins::penguins |>
filter(!is.na(body_mass_g))
filter(!is.na(body_mass_g))
penguins_data <- palmerpenguins::penguins |>
filter(!is.na(body_mass_g))
penguins_data
penguins_data <- palmerpenguins::penguins |>
filter(!is.na(sex)) |>
select(sex, body_mass_g, species, bill_length)
penguins_data <- palmerpenguins::penguins |>
filter(!is.na(sex)) |>
select(sex, body_mass_g, species, bill_length_mm)
# Chunk 1
#| echo: false
#| results: 'hide'
renv::use(lockfile = "renv.lock")
# Chunk 2
#| echo: false
library(tidyverse)
penguins_data <- palmerpenguins::penguins |>
filter(!is.na(sex)) |>
select(sex, body_mass_g, species, bill_length_mm)
penguins_data
# Chunk 3
#| echo: false
penguins_data |> ggplot(aes(body_mass_g, bill_length_mm, col = sex)) +
geom_jitter(size = 2, alpha = 0.5) +
facet_wrap(vars(species)) +
scale_color_manual(values = thematic::okabe_ito(3)[2:3]) +
theme_minimal(base_size = 14) +
theme(
legend.position = 'top',
panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank()
) +
labs(
x = 'Body mass (in g)',
y = 'Bill length (in mm)',
col = 'Sex'
)
# Chunk 4
tibble(x = seq(-10, 10, 0.1), y = plogis(x)) %>%
ggplot(aes(x, y)) +
geom_line(color = thematic::okabe_ito(3)[3], size = 2) +
theme_minimal(base_size = 14) +
theme(panel.grid.minor = element_blank())
# Chunk 5
#| echo: false
lm.mod <- penguins_data %>%
mutate(
sex = if_else(sex == 'male', 1, 0),
) %>%
lm(data = ., sex ~ body_mass_g + bill_length_mm + species)
preds_lm <- penguins_data %>%
mutate(
prob.fit = plogis(lm.mod$fitted.values),
prediction = if_else(prob.fit > 0.5, 'male', 'female'),
correct = if_else(sex == prediction, 'correct', 'incorrect')
)
preds_lm %>%
ggplot(aes(x = prob.fit, y = sex)) +
geom_violin() +
theme_minimal(base_size = 20) +
theme(panel.grid.minor = element_blank()) +
scale_x_continuous(labels = scales::label_percent()) +
labs(
x = 'Predicted probability to be male',
y = element_blank()
)
renv::snapshot()
renv::restore()
install.packages('MASS')
renv::restore()
install.packages('MASS@7.3-58')
renv::snapshot()
