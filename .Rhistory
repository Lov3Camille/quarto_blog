blogdown::serve_site()
install.packages('showtext')
install.packages('camcorder')
remotes::install_github("thebioengineer/camcorder")
install.packages('rsvg')
install.packages('rsvg')
install.packages('pdftools')
remotes::install_github("thebioengineer/camcorder")
library(tidyverse)
recorded_followers <- read_rds('content/en/post/2022-05-06-track-twitter-follower/followers.rds') %>%
mutate(type = 'recorded')
recorded_followers <- read_rds('posts/2022-05-06-track-twitter-follower/followers.rds') %>%
mutate(type = 'recorded')
install.packages("rtweet", repos = 'https://ropensci.r-universe.dev')
keyring::key_get('twitter-bearer-token')
install.packages('keyring')
install.packages('sodium')
install.packages('sodium')
install.packages('keyring')
keyring::key_get('twitter-bearer-token')
keyring::key_get('twitter-bearer-token')
keyring::key_set('twitter-bearer-token')
auth <- rtweet::rtweet_app(
bearer_token = keyring::key_get('twitter-bearer-token')
)
auth_as(auth)
library(rtweet)
auth <- rtweet::rtweet_app(
bearer_token = keyring::key_get('twitter-bearer-token')
)
auth_as(auth)
auth
keyring::key_get('twitter-bearer-token')
keyring::key_get('twitter-bearer-token')
keyring::backend_secret_service
keyring::backend_secret_service$public_methods$keyring_list()
keyring::default_backend()
keyring::default_backend()$keyring_list()
keyring::key_list()
keyring::key_list()
keyring::keyring_list()
keyring::keyring_list()
keyring::keyring_create('all_keys', password = 'dummy_password')
keyring::key_set('twitter-bearer-token', keyring = 'all_keys')
keyring::keyring_list()
keyring::keyring_create('system', password = 'dummy_password')
keyring::key_set('twitter-bearer-token', keyring = 'all_keys')
keyring::key_get('twitter-bearer-token')
keyring::key_set('twitter-bearer-token', keyring = 'system')
Sys.setlocale(locale = 'English')
Sys.getlocale("LC_TIME")
Sys.setlocale(locale = 'en_EN.UTF-8')
Sys.setlocale(locale = 'en_US.UTF-8')
# Chunk 1
library(tidyverse)
library(lubridate)
library(showtext)
library(ggtext)
showtext_opts(dpi = 300)
showtext_auto()
font_add_google('Fira Sans', 'general_text')
font_add_google('Oleo Script', 'title_text')
camcorder::gg_record(
dir = 'img',
width = 297, # A4 paper
height = 210,
unit = 'mm',
dpi = 300
)
# Chunk 2
recorded_followers <- read_rds('followers.rds') %>%
mutate(type = 'recorded')
twitter_registration <- lubridate::make_datetime(2021, 7, 19, 9)
first_recorded_date <- recorded_followers[[1, 'time']]
first_recorded_followers <- recorded_followers[[1, 'followers']]
days_to_first_record <- as.numeric(first_recorded_date - twitter_registration)
interpolated_followers <- tibble(
time = twitter_registration + lubridate::days(0:floor(days_to_first_record)),
followers = floor(seq_along(time) * first_recorded_followers / days_to_first_record)
) %>%
mutate(type = 'interpolated')
followers <- bind_rows(interpolated_followers, recorded_followers)
color_palette <- thematic::okabe_ito(8)
axis_color <- 'grey80'
interpolated_color <- 'grey40'
Sys.setlocale("LC_ALL","English")
base_timeline <- followers %>%
ggplot(aes(time, followers)) +
geom_line(aes(linetype = type), size = 1, col = interpolated_color) +
annotate(
'rect',
xmin = twitter_registration,
xmax = first_recorded_date,
ymin = 0,
ymax = first_recorded_followers,
fill = interpolated_color,
alpha = 0.2,
col = interpolated_color,
linetype = 3
) +
annotate(
'richtext',
x = first_recorded_date,
y = 0,
hjust = 1.0,
vjust = -0.1,
family = 'general_text',
color = interpolated_color,
label.colour = NA,
fill = NA,
label = '**Mysterious wonderland:**<br>This is the time before <br> I started tracking <br>followers automatically'
) +
scale_linetype_manual(values = c(2, 1)) +
scale_x_datetime(
date_labels = '%b %Y'
) +
coord_cartesian(
xlim = c(twitter_registration, make_datetime(2022, 6, 15)),
expand = F,
clip = 'off'
) +
labs(
x = element_blank(),
y = 'FOLLOWERS',
title = 'Celebrating 1000 followers'
) +
theme_minimal() +
theme(
legend.position = 'none',
text = element_text(
size = 20,
family = 'general_text',
color = axis_color
),
axis.text = element_text(
family = 'general_text',
color = axis_color
),
axis.title.y = element_text(
hjust = 1,
color = axis_color,
),
panel.grid.minor = element_blank(),
plot.title.position = 'plot'
)
base_timeline <- base_timeline +
annotate(
'point',
x = make_datetime(2022, 5, 5, 15),
y = 1000,
size = 5.5,
col = interpolated_color
) +
annotate(
'richtext',
family = 'general_text',
x = make_datetime(2022, 5, 10),
y = 1000,
hjust = 0,
vjust = 1.05,
lineheight = 1,
size = 4,
col = interpolated_color,
label.colour = NA,
label = 'reached 1000<br>on **May 05, 2022**'
)
recorded_followers <- read_rds('posts/2022-05-06-track-twitter-follower/followers.rds') %>%
mutate(type = 'recorded')
twitter_registration <- lubridate::make_datetime(2021, 7, 19, 9)
first_recorded_date <- recorded_followers[[1, 'time']]
first_recorded_followers <- recorded_followers[[1, 'followers']]
days_to_first_record <- as.numeric(first_recorded_date - twitter_registration)
interpolated_followers <- tibble(
time = twitter_registration + lubridate::days(0:floor(days_to_first_record)),
followers = floor(seq_along(time) * first_recorded_followers / days_to_first_record)
) %>%
mutate(type = 'interpolated')
followers <- bind_rows(interpolated_followers, recorded_followers)
color_palette <- thematic::okabe_ito(8)
axis_color <- 'grey80'
interpolated_color <- 'grey40'
Sys.setlocale("LC_ALL","English")
base_timeline <- followers %>%
ggplot(aes(time, followers)) +
geom_line(aes(linetype = type), size = 1, col = interpolated_color) +
annotate(
'rect',
xmin = twitter_registration,
xmax = first_recorded_date,
ymin = 0,
ymax = first_recorded_followers,
fill = interpolated_color,
alpha = 0.2,
col = interpolated_color,
linetype = 3
) +
annotate(
'richtext',
x = first_recorded_date,
y = 0,
hjust = 1.0,
vjust = -0.1,
family = 'general_text',
color = interpolated_color,
label.colour = NA,
fill = NA,
label = '**Mysterious wonderland:**<br>This is the time before <br> I started tracking <br>followers automatically'
) +
scale_linetype_manual(values = c(2, 1)) +
scale_x_datetime(
date_labels = '%b %Y'
) +
coord_cartesian(
xlim = c(twitter_registration, make_datetime(2022, 6, 15)),
expand = F,
clip = 'off'
) +
labs(
x = element_blank(),
y = 'FOLLOWERS',
title = 'Celebrating 1000 followers'
) +
theme_minimal() +
theme(
legend.position = 'none',
text = element_text(
size = 20,
family = 'general_text',
color = axis_color
),
axis.text = element_text(
family = 'general_text',
color = axis_color
),
axis.title.y = element_text(
hjust = 1,
color = axis_color,
),
panel.grid.minor = element_blank(),
plot.title.position = 'plot'
)
base_timeline <- base_timeline +
annotate(
'point',
x = make_datetime(2022, 5, 5, 15),
y = 1000,
size = 5.5,
col = interpolated_color
) +
annotate(
'richtext',
family = 'general_text',
x = make_datetime(2022, 5, 10),
y = 1000,
hjust = 0,
vjust = 1.05,
lineheight = 1,
size = 4,
col = interpolated_color,
label.colour = NA,
label = 'reached 1000<br>on **May 05, 2022**'
)
library(rtweet)
keyring::keyring_unlock('system', 'dummy_password')
auth <- rtweet::rtweet_app(
bearer_token = keyring::key_get('twitter-bearer-token')
)
auth_as(auth)
tl <- rtweet::get_timeline('rappa753', n = 1000)
tl_slice <- tl %>% slice_max(favorite_count, n = 5) %>%
select(created_at, full_text, favorite_count, retweet_count)
pop_tweets <- tl_slice %>%
mutate(
time = parse_date_time(
str_remove(created_at, "\\+0000"), # remove the +0000
orders = "a b d H:M:S Y",
locale = "en_US.UTF-8"
)
) %>%
mutate(
ind = map_dbl(time, ~ which.min(abs(followers$time - .))),
followers = followers$followers[ind - 1],
content = c(rep("dataviz", 3), "teaching", "teaching")
) %>%
select(time, full_text, favorite_count, ind, followers, content) %>%
slice(-c(2, 5))
pop_timeline <- map(pop_tweets$time, ~interval(start = . - hours(24), end = . + days(5))) %>%
map(~filter(followers, time %within% .)) %>%
map2(pop_tweets$content, ~mutate(.x, content = .y)) %>%
map2(1:3, ~mutate(.x, group = .y)) %>%
bind_rows()
tl_slice %>%
mutate(
time = parse_date_time(
str_remove(created_at, "\\+0000"), # remove the +0000
orders = "a b d H:M:S Y",
locale = "en_US.UTF-8"
)
)
tl_slice
followers$time
followers
tl_slice %>%
rename(time = created_at)
install.packages('animation')
install.packages('latex2exp')
install.packages('rvest')
install.packages("rvest")
library(tidyverse)
library(rvest)
read_html('https://albert-rapp.de/post/2022-05-06-track-twitter-follower/')
read_html('https://albert-rapp.de/post/2022-05-06-track-twitter-follower/') %>%
rvest::html_text()
read_html('https://albert-rapp.de/post/2022-05-06-track-twitter-follower/') %>%
rvest::html_text2()
read_html('https://albert-rapp.de/post/2022-05-06-track-twitter-follower/') %>%
rvest::html_element('body')
read_html('https://albert-rapp.de/post/2022-05-06-track-twitter-follower/') %>%
rvest::html_nodes('body')
read_html('https://albert-rapp.de/post/2022-05-06-track-twitter-follower/') %>%
rvest::html_nodes('body') %>%
rvest::html_text()
install.packages('gapminder')
remotes::install_github("seankross/postcards@main")
postcards::create_postcard(template = "jolla")
0.4 * 18
getwd()
alpha_points <- 0.3
size_points <- 2.5
size_lines <- 1
cb_fill <- "grey10"
scale_color_party <- scale_color_manual(
values = c(
"AfD" = "#003DA5",
"CDU/CSU" = "#FF9900",
"FDP" = "#009ee3",
"GRÜNE" = "#faca30",
"LINKE" = "#000000",
"SPD" = "#FFFFFF"
)
)
scale_fill_party <- scale_fill_manual(
values = c(
"AfD" = "#009CDE",
"CDU/CSU" = "#000000",
"FDP" = "#ffed00",
"GRÜNE" = "#43B02A",
"LINKE" = "#FF0000",
"SPD" = "#E3000F"
)
)
scale_x_election_years <- scale_x_date(
breaks = election_dates,
date_labels = "%y",
minor_breaks = NULL
)
install.packages('deldir')
source("/media/albert/Files/NextCloud/R Projects/quarto_blog/footer.html")
keyring::keyring_unlock()
keyring::has_keyring_support()
keyring::key_list()
keyring::keyring_create('blogposts', password = 'Idiotensicher123')
keyring::key_set('twitter-bearer-token', keyring = 'blogposts')
keyring::keyring_unlock()
keyring::keyring_unlock('blogposts')
install.packages('mRpostman')
remotes::install_github("allanvc/mRpostman")
keyring::keyring_create('blogpost')
keyring::key_set('twitter-bearer-token', keyring = 'blogpost')
keyring::key_set('dataviz-mail', keyring = 'blogpost')
keyring::key_set('dataviz-mail-password', keyring = 'blogpost')
keyring::key_set('allowed_senders', keyring = 'blogpost')
#| echo: false
keyring::keyring_unlock('blogpost', 'blog-dummy-password')
bearer_token <- keyring::key_get('twitter-bearer-token', keyring = 'blogpost')
user_mail <- keyring::key_get('dataviz-mail', keyring = 'blogpost')
password_mail <- keyring::key_get('dataviz-mail-password', keyring = 'blogpost')
allowed_senders <- keyring::key_get('allowed_senders', keyring = 'blogpost')
password_mail
user_mail
allowed_senders
install.packages('ggchicklet')
remotes::install_github("hrbrmstr/ggchicklet")
auth <- rtweet::rtweet_app(
bearer_token = keyring::key_get('twitter-bearer-token', keyring = 'blogpost')
)
auth_as(auth)
library(rtweet)
auth_as(auth)
tl <- get_timeline('rappa753', n = 1000)
Sys.getlocale()
# Chunk 1
#| echo: false
knitr::include_graphics('final_viz.png')
# Chunk 2
#| eval: false
remotes::install_github("rOpenSci/rtweet")
# Chunk 3
#| echo: false
keyring::keyring_unlock('blogpost', 'blog-dummy-password')
auth <- rtweet::rtweet_app(
bearer_token = keyring::key_get('twitter-bearer-token', keyring = 'blogpost')
)
rtweet::auth_as(auth)
# Chunk 4
library(rtweet)
tib <- get_followers('rappa753')
tib
nrow(tib)
# Chunk 5
#| message: false
#| warning: false
library(tidyverse)
tl <- get_timeline('rappa753', n = 1000)
tl_slice <- tl %>%
slice_max(favorite_count, n = 5) %>%
select(created_at, full_text, favorite_count, retweet_count)
tl_slice
# Chunk 6
auth <- rtweet::rtweet_app(
bearer_token = keyring::key_get('twitter-bearer-token', keyring = 'blogpost')
)
auth_as(auth)
# Chunk 7
tl_slice
# Chunk 8
#| warning: false
#| mesage: false
library(lubridate)
tl_slice %>%
mutate(created_at = parse_date_time(
str_remove(created_at, '\\+0000'), # remove the +0000
orders = 'a b d H:M:S Y'
))
# Chunk 9
parsed_highlights <- tl_slice %>%
mutate(created_at = parse_date_time(
str_remove(created_at, '\\+0000'), # remove the +0000
orders = 'a b d H:M:S Y',
locale = "en_US.UTF-8"
))
parsed_highlights
# Chunk 10
parsed_highlights %>%
ggplot(aes(created_at, favorite_count)) +
geom_line()
# Chunk 11
Sys.setlocale("LC_ALL","English")
p <- parsed_highlights %>%
ggplot(aes(created_at, favorite_count)) +
geom_line() +
scale_x_datetime(
date_breaks = '2 months', # break every two months
date_labels = '%b %Y'
)
p
# Chunk 12
p <- p +
annotate(
'rect',
xmin = make_datetime(year = 2021, month = 11, day = 6, hour = 12),
xmax = make_datetime(year = 2021, month = 9),
ymin = 200,
ymax = 273,
alpha = 0.5
)
p
# Chunk 13
my_interval <- interval(
start = make_date(year = 2022, month = 2),
end = make_date(year = 2022, month = 3, day = 10)
)
p +
geom_line(
data = parsed_highlights %>% filter(created_at %within% my_interval),
color = 'red',
size = 2
)
# Chunk 14
p +
annotate(
'rect',
xmin = parsed_highlights[[1, 'created_at']] - hours(24),
xmax = parsed_highlights[[1, 'created_at']] + days(5),
ymin = -Inf,
ymax = Inf,
alpha = 0.25,
fill = 'blue'
)
tl_slice
tl_slice %>%
mutate(created_at = parse_date_time(
str_remove(created_at, '\\+0000'), # remove the +0000
orders = 'a b d H:M:S Y'
))
tl_slice
source("/media/albert/Files/NextCloud/R Projects/quarto_blog/footer.html")
renv::init()
renv::snapshot(lockfile = 'renv_snap.lock')
renv::init()
renv::snapshot(lockfile = 'renv.lock')
install.packages('ggplot2')
install.packages('nplyr')
getwd()
usethis::edit_r_environ()
install.packages('usethis')
usethis::edit_r_environ()
getOption("download.file.method")
renv:::renv_download_method()
getwd()
getwd()
